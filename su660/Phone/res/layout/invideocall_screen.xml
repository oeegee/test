<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2007 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- In-call state of the Phone UI. -->
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent"
              >

    <!-- Main frame containing the main set of in-call UI elements. -->
    <FrameLayout android:id="@+id/mainFrame_videocall"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:paddingLeft="6dip"
        android:paddingRight="6dip"
        >
        <!--  android:paddingTop="10dip" by hgkim 10/08/23-->

        

		<!-- (2) inVideoCallPanel: the main set of in-call UI elements.
             We update this view's background to indicate the state of the
             current call; see updateInCallPanelBackground(). -->
        <RelativeLayout android:id="@+id/inVideoCallPanel"
                        android:layout_width="fill_parent"
                        android:layout_height="fill_parent"
                        >

                <!-- The "VideoCall Card", which displays info about the currently
                 active phone call(s) on the device.  See videocall_card.xml. -->
            <com.android.phone.VideoCallCard android:id="@+id/videocallCard"
                                        android:layout_width="fill_parent"
                                        android:layout_height="fill_parent"
                />   
                
           </RelativeLayout>  <!-- End of inCallPanel -->

    </FrameLayout>  <!-- End of mainFrame -->
    

    <!-- In-call onscreen touch controls, used on some platforms. -->
    <!-- TODO: if this widget ends up being totally unused on some platforms,
         then this should probably be a ViewStub. -->
    <com.android.phone.InCallTouchUi
        android:id="@+id/inCallTouchUi"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        />
</FrameLayout>
