package com.mtelo.visualexpression;

import android.util.Log;

public class AmfCodec
{

	static
	{
		//Log.d("AmfCodec", "wang ========================================");
		//Log.d("AmfCodec", "wang | loadLibrary() ");
		System.loadLibrary("amf-lib");
		//Log.d("AmfCodec", "wang ========================================\n");
	}

	/************************************************************************/
	// AMF Codec 라이브러리 생성.
	/************************************************************************/
    public static native int JNICAmfLib();	
    
	/************************************************************************/
	// 효과의 임시 저장 위치를 지정 한다.
	/************************************************************************/
    public static native int JNISetWorkDirectory(String sPath);	
	
	/************************************************************************/
	// AMF Codec 라이브러리 초기화.
	/************************************************************************/
    public static native int JNIInitialize();
	
	/************************************************************************/
	// Decode 할 AMF 파일 오픈.
	/************************************************************************/
    public static  native int JNIDecode(String sPath);
	
	/************************************************************************/
	// AMF 파일의 컨텐츠 타입을 얻는다. 
	// int[0] -> 컨텐츠 너비
	// int[1] -> 컨텐츠 높이
	// int[2] -> 컨텐츠 타입
	/************************************************************************/
    public static  native int[] JNIGetContents();
	
	/************************************************************************/
	// AFM 컨텐츠의 클립 수를 리턴 한다.
	/************************************************************************/
    public static  native int JNIGetClipCnt();

	/************************************************************************/
	// AMF 컨텐츠의 버전을 리턴 한다.
	/************************************************************************/
    public static  native String JNIGetVersion();
	
	/************************************************************************/
	// AMF 플레이를 위한 준비를 한다. 
	// 인자값으로는 재생할 컨텐츠의 너비와 높이를 지정 한다.
	/************************************************************************/
    public static  native int JNIInitPlay(int w, int h);
	
	/************************************************************************/
	// AMF 파일의 전체 재생 시간을 리턴한다. 리턴 값은 단위는 MS
	/************************************************************************/
    public static  native long JNIGetRunTime();

	/************************************************************************/
	// 프레임 버퍼를 초기화 한다.
	/************************************************************************/
    public static	 native int JNIInitBuffer(int w, int h);    
	
	/************************************************************************/
	// AMF 파일 내의 FRAME을 얻는다. 
	// 인자값으로는 너비, 높이, 현재 재생 시간.
	/************************************************************************/
    public static  native byte[] JNIGetFrame(int w, int h, long time);
	
	/************************************************************************/
	// AMF Codec 라이브러리를 해지 시킨다.
	/************************************************************************/
    public static  native int JNIReleaseLib();
	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/
    public  static native String JNIGetModifyVer();
	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/
    public static  native int JNIGetSizeofDWORD();
	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/
    public static  native int JNIGetSizeofLONG();
	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/
    public static  native int JNIGetSizeofDSHORT();
	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/
	
    public static  native int JNIGetSizeofBITMAPFILEHEADER();	
	/************************************************************************/
	// 개인 테스트 ...
	/************************************************************************/

	/************************************************************************/
	// AMF 컨텐츠 내의 MP3 파일을 지정한 경로에 저장을 한다.
    // 리턴 값으로는 저장된 파일의 크기
	/************************************************************************/
    public static native int JNIGetBGM(String sPath);
    
	/************************************************************************/
	// AMF 컨텐츠 내의 MP3 파일을 존재 여부 확인
	/************************************************************************/
    public static native boolean JNIIsBGM();
    
}
